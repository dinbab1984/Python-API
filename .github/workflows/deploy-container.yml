name: Deploy-Containers

on : [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Login dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
      - name: docker setup 
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: docker build image and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          builder: ${{steps.buildx.outputs.name}}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/python-api:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      python-api:
        image: dinbab1984/python-api:latest
        env:
          DATABASE_NAME: ${{secrets.DATABASE_NAME}}
          DATABASE_HOSTNAME: postgres
          DATABASE_PORT: ${{secrets.DATABASE_PORT}}
          DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
          DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
          JWT_ALGORITHM: ${{secrets.JWT_ALGORITHM}}
          JWT_ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.JWT_ACCESS_TOKEN_EXPIRE_MINUTES}}
        ports:
          - 8000:8000

    steps:
      - name: docker ps
        run: docker ps
      - name: run curl
        run: curl -Lkv http://localhost:8000/