name: Build-Deploy-Python-API

on : [push]

jobs:
#  build: 
#    runs-on: ubuntu-latest
#    env:
#      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
#      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
#      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
#      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
#      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
#      JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
#      JWT_ALGORITHM: ${{secrets.JWT_ALGORITHM}}
#      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.JWT_ACCESS_TOKEN_EXPIRE_MINUTES}}
#    services:
#      postgres:
#        image: postgres
#        env:
#          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
#          POSTGRES_DB: ${{secrets.DATABASE_NAME}}
#        ports:
#          - 5432:5432
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#    steps:
#      - name: git pull
#        uses: actions/checkout@v3
#      - name: print database name
#        run: echo ${{secrets.DATABASE_NAME}}
#      - name: setup python
#        uses: actions/setup-python@v4
#        with: 
#          python-version: '3.10'
#      - name: update pip
#        run: python -m pip install --upgrade pip
#      - name: install app dependencies
#        run: pip install -r requirements.txt
#      - name: install and run pytest
#        run: |
#          pip install pytest
#          pytest --disable-warnings -v -s
  deploy:
    runs-on: ubuntu-latest
#    needs: [build]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Login dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
      - name: docker setup 
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: docker build image and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          builder: ${{steps.buildx.outputs.name}}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/python-api:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image run
        uses: tj-actions/docker-run@v2
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/python-api:latest
          name: python-api
          options:
            --env DATABASE_NAME=${{secrets.DATABASE_NAME}}
            --env DATABASE_HOSTNAME=postgres
            --env DATABASE_PORT=${{secrets.DATABASE_PORT}}
            --env DATABASE_USERNAME=${{secrets.DATABASE_USERNAME}}
            --env DATABASE_PASSWORD=${{secrets.DATABASE_PASSWORD}}
            --env JWT_SECRET_KEY=${{secrets.JWT_SECRET_KEY}}
            --env JWT_ALGORITHM=${{secrets.JWT_ALGORITHM}}
            --env JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${{secrets.JWT_ACCESS_TOKEN_EXPIRE_MINUTES}}